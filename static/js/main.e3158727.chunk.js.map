{"version":3,"sources":["Components/Map.js","Components/Chart.js","Components/App.js","reportWebVitals.js","index.js"],"names":["mapboxgl","accessToken","Map","mapContainerRef","useRef","useState","setMap","colors","d3","map","color","index","flat","useEffect","container","current","style","center","zoom","attributionControl","addControl","AttributionControl","compact","RulerControl","on","console","log","addSource","type","data","addLayer","id","source","layout","paint","remove","className","ref","Charts","App","Chart","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TAOAA,IAASC,YACP,yFAyEaC,MAvEf,WACE,IAAMC,EAAkBC,iBAAO,MADlB,EAESC,mBAAS,MAFlB,mBAEDC,GAFC,WAKPC,EAFaC,IAAgB,IAGhCC,KAAI,SAACC,EAAOC,GACX,MAAO,CAACA,EAAOD,MAEhBE,KAAK,GAuDR,OArDAC,qBAAU,WACR,IAAMJ,EAAM,IAAIT,IAASE,IAAI,CAC3BY,UAAWX,EAAgBY,QAC3BC,MAAO,kDACPC,OAAQ,CAAC,mBAAoB,mBAC7BC,KAAM,KACNC,oBAAoB,IA4CtB,OAzCAV,EAAIW,WACF,IAAIpB,IAASqB,mBAAmB,CAC9BC,SAAS,KAIbb,EAAIW,WAAW,IAAIG,IAAgB,aACnCd,EAAIe,GAAG,YAAY,kBAAMC,QAAQC,IAAI,gBACrCjB,EAAIe,GAAG,aAAa,kBAAMC,QAAQC,IAAI,iBAEtCjB,EAAIe,GAAG,QAAQ,WACbf,EAAIkB,UAAU,WAAY,CACxBC,KAAM,UACNC,KACE,6GAGJpB,EAAIkB,UAAU,WAAY,CACxBC,KAAM,UACNC,KACE,wGAGJpB,EAAIqB,SAAS,CACXC,GAAI,WACJH,KAAM,OACNI,OAAQ,WACRC,OAAQ,GACRC,MAAO,CACL,aAAa,CACX,cACA,CAAC,UACD,CAAC,MAAO,gBAHV,mBAIK3B,IAEL,eAAgB,MAGpBD,EAAOG,MAGF,kBAAMA,EAAI0B,YAChB,IAGD,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,gBAAgBC,IAAKlC,O,OCjE3BmC,MARf,WACE,OACE,qBAAKF,UAAU,SAAf,SACE,qBAAKA,UAAU,sBAAf,uC,OCQSG,MATf,WACE,OACE,sBAAKH,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAACI,EAAD,QCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e3158727.chunk.js","sourcesContent":["import mapboxgl from 'mapbox-gl';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport RulerControl from 'mapbox-gl-controls/lib/ruler';\r\nimport * as d3 from 'd3';\r\n\r\nimport '../css/Map.css';\r\n\r\nmapboxgl.accessToken =\r\n  'pk.eyJ1Ijoic2doYW4iLCJhIjoiY2szamxqbjZnMGtmbTNjbXZzamh4cng3dSJ9.GGv4GVVoZ811d6PKi54PrA';\r\n\r\nfunction Map() {\r\n  const mapContainerRef = useRef(null);\r\n  const [map, setMap] = useState(null);\r\n  const colorScale = d3.schemeRdYlBu[11];\r\n\r\n  const colors = colorScale\r\n    .map((color, index) => {\r\n      return [index, color];\r\n    })\r\n    .flat(1);\r\n\r\n  useEffect(() => {\r\n    const map = new mapboxgl.Map({\r\n      container: mapContainerRef.current,\r\n      style: 'mapbox://styles/sghan/ck1ljdcmy16fc1cpg0f4qh3wu',\r\n      center: [127.06243582034075, 37.49804469532547],\r\n      zoom: 12.7,\r\n      attributionControl: false,\r\n    });\r\n\r\n    map.addControl(\r\n      new mapboxgl.AttributionControl({\r\n        compact: true,\r\n      })\r\n    );\r\n\r\n    map.addControl(new RulerControl(), 'top-right');\r\n    map.on('ruler.on', () => console.log('ruler: on'));\r\n    map.on('ruler.off', () => console.log('ruler: off'));\r\n\r\n    map.on('load', () => {\r\n      map.addSource('hexagons', {\r\n        type: 'geojson',\r\n        data:\r\n          'https://raw.githubusercontent.com/Aete/transport-accessibility/master/src/data/hexagon_with_data.geojson',\r\n      });\r\n\r\n      map.addSource('busStops', {\r\n        type: 'geojson',\r\n        data:\r\n          'https://raw.githubusercontent.com/Aete/transport-accessibility/master/src/data/seoulBusStop.geojson',\r\n      });\r\n\r\n      map.addLayer({\r\n        id: 'hexagons',\r\n        type: 'fill',\r\n        source: 'hexagons',\r\n        layout: {},\r\n        paint: {\r\n          'fill-color': [\r\n            'interpolate',\r\n            ['linear'],\r\n            ['get', 'total_score'],\r\n            ...colors,\r\n          ],\r\n          'fill-opacity': 0.7,\r\n        },\r\n      });\r\n      setMap(map);\r\n    });\r\n\r\n    return () => map.remove();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      <div className=\"map-container\" ref={mapContainerRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport '../css/chart.css';\r\n\r\nfunction Charts() {\r\n  return (\r\n    <div className=\"charts\">\r\n      <div className=\"charts__placeholder\">placeholder for charts</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Charts;\r\n","import Map from './Map';\nimport Charts from './Chart';\n\nimport '../css/App.css';\n\nfunction App() {\n  return (\n    <div className=\"dashboard\">\n      <Map />\n      <Charts />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}