{"version":3,"sources":["Components/Map.js","D3Chart/Spider.js","Components/Modal.js","Components/App.js","reportWebVitals.js","index.js"],"names":["mapboxgl","accessToken","Map","handleModal","mapContainerRef","useRef","useState","setMap","useEffect","colors","d3","map","color","index","flat","container","current","style","center","zoom","attributionControl","addControl","AttributionControl","compact","on","addSource","type","data","addLayer","id","source","layout","paint","e","features","properties","x","y","score_bus","score_subway","score_bike","total_score","console","log","remove","Popup","setLngLat","setHTML","addTo","ReactDOM","render","Description","document","querySelector","element","margin","viewbox","svg","append","attr","newFontSize","parseInt","rScale","domain","range","width","score","polygon","selectAll","enter","height","d","slice","text","Math","cos","PI","sin","busCoord","subwayCoord","bikeCoord","transition","duration","i","Spider","className","ref","round","onTouchStart","onClick","Modal","App","modal","setModal","modalOnOff","currentModal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4dc531ae.chunk.js","sourcesContent":["import mapboxgl from 'mapbox-gl';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as d3 from 'd3';\r\n\r\nimport '../css/Map.css';\r\nimport Spider from '../D3Chart/Spider';\r\n\r\nmapboxgl.accessToken =\r\n  'pk.eyJ1Ijoic2doYW4iLCJhIjoiY2szamxqbjZnMGtmbTNjbXZzamh4cng3dSJ9.GGv4GVVoZ811d6PKi54PrA';\r\n\r\nfunction Map({ handleModal }) {\r\n  const mapContainerRef = useRef(null);\r\n  const [, setMap] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const colorScale = d3.schemeRdYlGn[11];\r\n    const colors = colorScale\r\n      .map((color, index) => {\r\n        return [index, color];\r\n      })\r\n      .flat(1);\r\n\r\n    const map = new mapboxgl.Map({\r\n      container: mapContainerRef.current,\r\n      style: 'mapbox://styles/sghan/ck1ljdcmy16fc1cpg0f4qh3wu',\r\n      center: [127.06243582034075, 37.49804469532547],\r\n      zoom: 12.7,\r\n      attributionControl: false,\r\n    });\r\n\r\n    map.addControl(\r\n      new mapboxgl.AttributionControl({\r\n        compact: true,\r\n      })\r\n    );\r\n\r\n    map.on('load', () => {\r\n      map.addSource('hexagons', {\r\n        type: 'geojson',\r\n        data:\r\n          'https://raw.githubusercontent.com/Aete/transport-accessibility/master/src/data/hexagon_res_10_400m_count/hexagon_with_data.geojson',\r\n      });\r\n\r\n      map.addLayer({\r\n        id: 'hexagons',\r\n        type: 'fill',\r\n        source: 'hexagons',\r\n        layout: {},\r\n        paint: {\r\n          'fill-color': [\r\n            'interpolate',\r\n            ['linear'],\r\n            ['get', 'total_score'],\r\n            ...colors,\r\n          ],\r\n          'fill-opacity': 0.7,\r\n        },\r\n      });\r\n      setMap(map);\r\n    });\r\n\r\n    map.on('click', 'hexagons', function (e) {\r\n      const {\r\n        x,\r\n        y,\r\n        score_bus,\r\n        score_subway,\r\n        score_bike,\r\n        total_score,\r\n      } = e.features[0].properties;\r\n      console.log(e.features[0].properties);\r\n      d3.select('.spiderChart').remove();\r\n      d3.select('.description').remove();\r\n\r\n      const marker = new mapboxgl.Popup()\r\n        .setLngLat([x, y])\r\n        .setHTML(\r\n          `<div class=\"description\"></div> <div class=\"spiderChart\"></div>`\r\n        )\r\n        .addTo(map);\r\n\r\n      ReactDOM.render(\r\n        <Description\r\n          total_score={total_score}\r\n          score_bus={score_bus}\r\n          score_subway={score_subway}\r\n          score_bike={score_bike}\r\n          handleModal={handleModal}\r\n        />,\r\n        document.querySelector('.description')\r\n      );\r\n\r\n      Spider(d3.select('.spiderChart'), {\r\n        score_bus,\r\n        score_subway,\r\n        score_bike,\r\n      });\r\n    });\r\n\r\n    return () => map.remove();\r\n  }, [handleModal]);\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      <div className=\"map-container\" ref={mapContainerRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n\r\nfunction Description({\r\n  total_score,\r\n  score_bus,\r\n  score_subway,\r\n  score_bike,\r\n  handleModal,\r\n}) {\r\n  return (\r\n    <section className=\"textInfo\">\r\n      <h1>Accessibility score</h1>\r\n      <ul>\r\n        <li>total score: {Math.round(total_score * 100) / 100} / 15</li>\r\n        <li>subway: {Math.round(score_subway * 100) / 100} / 5</li>\r\n        <li>bus: {Math.round(score_bus * 100) / 100} / 5</li>\r\n        <li>bike: {Math.round(score_bike * 100) / 100} / 5</li>\r\n        <li>\r\n          <span\r\n            className=\"aboutBtn\"\r\n            onTouchStart={handleModal}\r\n            onClick={handleModal}\r\n          >\r\n            About the project (click)\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n","import * as d3 from 'd3';\r\nexport default function Spider(\r\n  element,\r\n  { score_bus, score_bike, score_subway }\r\n) {\r\n  const margin = {\r\n    top: 25,\r\n    left: 25,\r\n    right: 25,\r\n    bottom: 25,\r\n  };\r\n\r\n  const width = 240;\r\n  const height = 240;\r\n  const viewbox = [\r\n    0,\r\n    0,\r\n    width + margin.left + margin.right,\r\n    height + margin.top + margin.bottom,\r\n  ];\r\n  const svg = element\r\n    .append('svg')\r\n    .attr('viewBox', viewbox)\r\n    .attr('preserveAspectRatio', 'xMinYMid meet');\r\n\r\n  const newFontSize = 12 * (290 / parseInt(d3.select('svg').style('width')));\r\n\r\n  const container = svg\r\n    .append('g')\r\n    .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n  const rScale = d3\r\n    .scaleLinear()\r\n    .domain([0, 5])\r\n    .range([0, width / 2]);\r\n\r\n  const score = [0, 1, 2, 3, 4, 5];\r\n\r\n  const axisSub = container\r\n    .selectAll('.axis-sub')\r\n    .data(score)\r\n    .enter()\r\n    .append('circle')\r\n    .attr('class', 'axis-sub')\r\n    .attr('cx', width / 2)\r\n    .attr('cy', height / 2)\r\n    .attr('fill', 'none')\r\n    .attr('stroke', '#424242')\r\n    .attr('r', (d) => rScale(d));\r\n\r\n  const label = container\r\n    .selectAll('.label')\r\n    .data(score.slice(1))\r\n    .enter()\r\n    .append('text')\r\n    .text((d) => d)\r\n    .attr('text-anchor', 'middle')\r\n    .attr('y', (d) => rScale(d) + rScale(5) + 15)\r\n    .attr('x', width / 2)\r\n    .style('font-size', '10px')\r\n    .attr('fill', (d) => '#636363');\r\n\r\n  const polygon = container\r\n    .append('g')\r\n    .attr('transform', `translate(${width / 2},${height / 2})`);\r\n\r\n  polygon\r\n    .append('circle')\r\n    .attr('cx', 0)\r\n    .attr('cy', 0)\r\n    .attr('fill', '#636363')\r\n    .attr('r', 1);\r\n\r\n  const axisMain = polygon\r\n    .selectAll('.axis-main')\r\n    .data([1, 5, 9])\r\n    .enter()\r\n    .append('line')\r\n    .attr('class', 'axis-main')\r\n    .attr('x1', 0)\r\n    .attr('y1', 0)\r\n    .attr('x2', (d) => Math.cos((Math.PI * d) / 6) * rScale(5))\r\n    .attr('y2', (d) => Math.sin((Math.PI * d) / 6) * rScale(5))\r\n    .attr('stroke', '#636363');\r\n\r\n  const busCoord = `${Math.cos(Math.PI / 6) * rScale(+score_bus)}, ${\r\n    Math.sin(Math.PI / 6) * rScale(+score_bus)\r\n  }`;\r\n  const subwayCoord = `0,${-rScale(+score_subway)}`;\r\n  const bikeCoord = `${Math.cos((5 * Math.PI) / 6) * rScale(+score_bike)}, ${\r\n    Math.sin((5 * Math.PI) / 6) * rScale(+score_bike)\r\n  }`;\r\n\r\n  polygon\r\n    .append('polygon')\r\n    .attr('fill', '#2196F3')\r\n    .attr('fill-opacity', 0.3)\r\n    .attr('stroke', '#2963FF')\r\n    .attr('stroke-width', 2)\r\n    .attr('points', '0,0 0,0 0,0')\r\n    .transition()\r\n    .duration(300)\r\n    .attr('points', `${busCoord} ${subwayCoord} ${bikeCoord}`);\r\n\r\n  polygon\r\n    .selectAll('.point')\r\n    .data([score_bus, score_bike, score_subway])\r\n    .enter()\r\n    .append('circle')\r\n    .attr('class', 'point')\r\n    .attr('cx', (d, i) => Math.cos((Math.PI * (i * 4 + 1)) / 6) * rScale(d))\r\n    .attr('cy', (d, i) => Math.sin((Math.PI * (i * 4 + 1)) / 6) * rScale(d))\r\n    .attr('r', '3')\r\n    .attr('fill', '#2196F3');\r\n\r\n  polygon\r\n    .append('text')\r\n    .text('bus')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('x', Math.cos(Math.PI / 6) * rScale(6))\r\n    .attr('y', Math.sin(Math.PI / 6) * rScale(6))\r\n    .attr('fill', '#FFFFFF')\r\n    .style('font-size', `${newFontSize}px`);\r\n\r\n  polygon\r\n    .append('text')\r\n    .text('bike')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('x', Math.cos((Math.PI * 5) / 6) * rScale(6))\r\n    .attr('y', Math.sin((Math.PI * 5) / 6) * rScale(6))\r\n    .attr('fill', '#FFFFFF')\r\n    .style('font-size', `${newFontSize}px`);\r\n\r\n  polygon\r\n    .append('text')\r\n    .text('subway')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('x', Math.cos((Math.PI * 9) / 6) * rScale(6))\r\n    .attr('y', Math.sin((Math.PI * 9) / 6) * rScale(6) + 12)\r\n    .attr('fill', '#FFFFFF')\r\n    .style('font-size', `${newFontSize}px`);\r\n}\r\n","import '../css/Modal.css';\r\n\r\nexport default function Modal({ handleModal }) {\r\n  return (\r\n    <article className=\"Modal\">\r\n      <header className=\"Modal__header\">\r\n        <h1>Transportation Accessibility Dashboard</h1>\r\n        <button onTouchStart={handleModal} onClick={handleModal}>\r\n          close\r\n        </button>\r\n      </header>\r\n      <main>\r\n        <p className=\"author\">\r\n          2021. 12 ~ present, Seunggyun Han & Woowon Chung\r\n        </p>\r\n        <p>\r\n          <strong>In Seoul</strong>, where personal car ownership is low and\r\n          dependence on public transportation is very high, accessibility to\r\n          public transportation is a very important factor when choosing a place\r\n          to work or live. Therefore, in the places with good access to public\r\n          transport, the most expensive and large-scale apartment complexes have\r\n          been built, and in places with relatively poor accessibility, small\r\n          and inexpensive multi-family houses are located.\r\n        </p>\r\n        <p>\r\n          In this study, targeting the Gangnam district, we investigated the\r\n          areas where actual public transportation (bicycle, subway, bus)\r\n          accessibility is weak and where it is good. In addition, by analyzing\r\n          the types of housing in each surveyed region, we tried to find a\r\n          district where redevelopment would be possible and a place where a new\r\n          public transport plan is needed.\r\n        </p>\r\n      </main>\r\n    </article>\r\n  );\r\n}\r\n","import Map from './Map';\nimport Modal from './Modal';\nimport { useState } from 'react';\n\nimport '../css/App.css';\n\nfunction App() {\n  const [modal, setModal] = useState(true);\n\n  const modalOnOff = () => {\n    setModal((currentModal) => !currentModal);\n  };\n\n  return (\n    <main className=\"dashboard\">\n      {modal && <Modal handleModal={modalOnOff} />}\n      <Map handleModal={modalOnOff} />\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}