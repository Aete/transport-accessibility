{"version":3,"sources":["Components/Map.js","D3Chart/Spider.js","Components/App.js","reportWebVitals.js","index.js"],"names":["mapboxgl","accessToken","Map","mapContainerRef","useRef","useState","setMap","useEffect","colors","d3","map","color","index","flat","container","current","style","center","zoom","attributionControl","addControl","AttributionControl","compact","on","addSource","type","data","addLayer","id","source","layout","paint","e","features","properties","x","y","score_bus","score_subway","score_bike","total_score","remove","text","textGenerate","Popup","setLngLat","setHTML","addTo","element","margin","viewbox","svg","append","attr","newFontSize","parseInt","rScale","domain","range","width","score","polygon","selectAll","enter","height","d","slice","Math","cos","PI","sin","busCoord","subwayCoord","bikeCoord","transition","duration","i","Spider","className","ref","round","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAOAA,IAASC,YACP,yFA8FaC,MA5Ff,WACE,IAAMC,EAAkBC,iBAAO,MADlB,EAEMC,mBAAS,MAAnBC,EAFI,oBAqFb,OAjFAC,qBAAU,WACR,IACMC,EADaC,IAAgB,IAEhCC,KAAI,SAACC,EAAOC,GACX,MAAO,CAACA,EAAOD,MAEhBE,KAAK,GAEFH,EAAM,IAAIV,IAASE,IAAI,CAC3BY,UAAWX,EAAgBY,QAC3BC,MAAO,kDACPC,OAAQ,CAAC,mBAAoB,mBAC7BC,KAAM,KACNC,oBAAoB,IAiEtB,OA9DAT,EAAIU,WACF,IAAIpB,IAASqB,mBAAmB,CAC9BC,SAAS,KAIbZ,EAAIa,GAAG,QAAQ,WACbb,EAAIc,UAAU,WAAY,CACxBC,KAAM,UACNC,KACE,uIAGJhB,EAAIiB,SAAS,CACXC,GAAI,WACJH,KAAM,OACNI,OAAQ,WACRC,OAAQ,GACRC,MAAO,CACL,aAAa,CACX,cACA,CAAC,UACD,CAAC,MAAO,gBAHV,mBAIKvB,IAEL,eAAgB,MAGpBF,EAAOI,MAGTA,EAAIa,GAAG,QAAS,YAAY,SAAUS,GAAI,IAAD,EAQnCA,EAAEC,SAAS,GAAGC,WANhBC,EAFqC,EAErCA,EACAC,EAHqC,EAGrCA,EACAC,EAJqC,EAIrCA,UACAC,EALqC,EAKrCA,aACAC,EANqC,EAMrCA,WACAC,EAPqC,EAOrCA,YAGF/B,IAAU,gBAAgBgC,SAE1B,IAAMC,EAAOC,EACXH,EACAH,EACAC,EACAC,IAGa,IAAIvC,IAAS4C,OACzBC,UAAU,CAACV,EAAGC,IACdU,QAFY,UAEDJ,EAFC,qCAGZK,MAAMrC,IClFA,SACbsC,EADa,GAGZ,IADCX,EACF,EADEA,UAAWE,EACb,EADaA,WAAYD,EACzB,EADyBA,aAEnBW,EACC,GADDA,EAEE,GAOFC,EAAU,CACd,EACA,EAJY,IAKJD,EATD,GAKM,IAKJA,EATD,IAWJE,EAAMH,EACTI,OAAO,OACPC,KAAK,UAAWH,GAChBG,KAAK,sBAAuB,iBAEzBC,EAAoB,IAAMC,SAAS9C,IAAU,OAAOO,MAAM,UAA5C,GAEdF,EAAYqC,EACfC,OAAO,KACPC,KAAK,YAFU,oBAEgBJ,EAFhB,YAE+BA,EAF/B,MAIZO,EAAS/C,MAEZgD,OAAO,CAAC,EAAG,IACXC,MAAM,CAAC,EAAGC,MAEPC,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GA0BxBC,GAxBU/C,EACbgD,UAAU,aACVpC,KAAKkC,GACLG,QACAX,OAAO,UACPC,KAAK,QAAS,YACdA,KAAK,KAAMM,KACXN,KAAK,KAAMW,KACXX,KAAK,OAAQ,QACbA,KAAK,SAAU,WACfA,KAAK,KAAK,SAACY,GAAD,OAAOT,EAAOS,MAEbnD,EACXgD,UAAU,UACVpC,KAAKkC,EAAMM,MAAM,IACjBH,QACAX,OAAO,QACPV,MAAK,SAACuB,GAAD,OAAOA,KACZZ,KAAK,cAAe,UACpBA,KAAK,KAAK,SAACY,GAAD,OAAOT,EAAOS,GAAKT,EAAO,GAAK,MACzCH,KAAK,IAAKM,KACV3C,MAAM,YAAa,QACnBqC,KAAK,QAAQ,SAACY,GAAD,MAAO,aAEPnD,EACbsC,OAAO,KACPC,KAAK,YAFQ,oBAEkBM,IAFlB,YAE+BK,IAF/B,OAIhBH,EACGT,OAAO,UACPC,KAAK,KAAM,GACXA,KAAK,KAAM,GACXA,KAAK,OAAQ,WACbA,KAAK,IAAK,GAEIQ,EACdC,UAAU,cACVpC,KAAK,CAAC,EAAG,EAAG,IACZqC,QACAX,OAAO,QACPC,KAAK,QAAS,aACdA,KAAK,KAAM,GACXA,KAAK,KAAM,GACXA,KAAK,MAAM,SAACY,GAAD,OAAOE,KAAKC,IAAKD,KAAKE,GAAKJ,EAAK,GAAKT,EAAO,MACvDH,KAAK,MAAM,SAACY,GAAD,OAAOE,KAAKG,IAAKH,KAAKE,GAAKJ,EAAK,GAAKT,EAAO,MACvDH,KAAK,SAAU,WAVlB,IAYMkB,EAAQ,UAAMJ,KAAKC,IAAID,KAAKE,GAAK,GAAKb,GAAQnB,GAAtC,aACZ8B,KAAKG,IAAIH,KAAKE,GAAK,GAAKb,GAAQnB,IAE5BmC,EAAW,aAAShB,GAAQlB,IAC5BmC,EAAS,UAAMN,KAAKC,IAAK,EAAID,KAAKE,GAAM,GAAKb,GAAQjB,GAA5C,aACb4B,KAAKG,IAAK,EAAIH,KAAKE,GAAM,GAAKb,GAAQjB,IAGxCsB,EACGT,OAAO,WACPC,KAAK,OAAQ,WACbA,KAAK,eAAgB,IACrBA,KAAK,SAAU,WACfA,KAAK,eAAgB,GACrBA,KAAK,SAAU,eACfqB,aACAC,SAAS,KACTtB,KAAK,SATR,UASqBkB,EATrB,YASiCC,EATjC,YASgDC,IAEhDZ,EACGC,UAAU,UACVpC,KAAK,CAACW,EAAWE,EAAYD,IAC7ByB,QACAX,OAAO,UACPC,KAAK,QAAS,SACdA,KAAK,MAAM,SAACY,EAAGW,GAAJ,OAAUT,KAAKC,IAAKD,KAAKE,IAAU,EAAJO,EAAQ,GAAM,GAAKpB,EAAOS,MACpEZ,KAAK,MAAM,SAACY,EAAGW,GAAJ,OAAUT,KAAKG,IAAKH,KAAKE,IAAU,EAAJO,EAAQ,GAAM,GAAKpB,EAAOS,MACpEZ,KAAK,IAAK,KACVA,KAAK,OAAQ,WAEhBQ,EACGT,OAAO,QACPV,KAAK,OACLW,KAAK,cAAe,UACpBA,KAAK,IAAKc,KAAKC,IAAID,KAAKE,GAAK,GAAKb,EAAO,IACzCH,KAAK,IAAKc,KAAKG,IAAIH,KAAKE,GAAK,GAAKb,EAAO,IACzCH,KAAK,OAAQ,WACbrC,MAAM,YAPT,UAOyBsC,EAPzB,OASAO,EACGT,OAAO,QACPV,KAAK,QACLW,KAAK,cAAe,UACpBA,KAAK,IAAKc,KAAKC,IAAe,EAAVD,KAAKE,GAAU,GAAKb,EAAO,IAC/CH,KAAK,IAAKc,KAAKG,IAAe,EAAVH,KAAKE,GAAU,GAAKb,EAAO,IAC/CH,KAAK,OAAQ,WACbrC,MAAM,YAPT,UAOyBsC,EAPzB,OASAO,EACGT,OAAO,QACPV,KAAK,UACLW,KAAK,cAAe,UACpBA,KAAK,IAAKc,KAAKC,IAAe,EAAVD,KAAKE,GAAU,GAAKb,EAAO,IAC/CH,KAAK,IAAKc,KAAKG,IAAe,EAAVH,KAAKE,GAAU,GAAKb,EAAO,GAAK,IACpDH,KAAK,OAAQ,WACbrC,MAAM,YAPT,UAOyBsC,EAPzB,ODhDIuB,CAAOpE,IAAU,gBAAiB,CAChC4B,YACAC,eACAC,kBAIG,kBAAM7B,EAAI+B,YAChB,IAGD,qBAAKqC,UAAU,MAAf,SACE,qBAAKA,UAAU,gBAAgBC,IAAK5E,OAOpCwC,EAAe,SAACH,EAAaH,EAAWC,EAAcC,GAC1D,MAAM,wGAAN,OAIuB4B,KAAKa,MAAoB,IAAdxC,GAAqB,IAJvD,yCAKkB2B,KAAKa,MAAqB,IAAf1C,GAAsB,IALnD,qCAMe6B,KAAKa,MAAkB,IAAZ3C,GAAmB,IAN7C,sCAOgB8B,KAAKa,MAAmB,IAAbzC,GAAoB,IAP/C,uF,OE7Fa0C,MARf,WACE,OACE,sBAAMH,UAAU,YAAhB,SACE,cAAC,EAAD,OCKSI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cb664b2d.chunk.js","sourcesContent":["import mapboxgl from 'mapbox-gl';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nimport '../css/Map.css';\r\nimport Spider from '../D3Chart/Spider';\r\n\r\nmapboxgl.accessToken =\r\n  'pk.eyJ1Ijoic2doYW4iLCJhIjoiY2szamxqbjZnMGtmbTNjbXZzamh4cng3dSJ9.GGv4GVVoZ811d6PKi54PrA';\r\n\r\nfunction Map() {\r\n  const mapContainerRef = useRef(null);\r\n  const [, setMap] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const colorScale = d3.schemeRdYlGn[11];\r\n    const colors = colorScale\r\n      .map((color, index) => {\r\n        return [index, color];\r\n      })\r\n      .flat(1);\r\n\r\n    const map = new mapboxgl.Map({\r\n      container: mapContainerRef.current,\r\n      style: 'mapbox://styles/sghan/ck1ljdcmy16fc1cpg0f4qh3wu',\r\n      center: [127.06243582034075, 37.49804469532547],\r\n      zoom: 12.7,\r\n      attributionControl: false,\r\n    });\r\n\r\n    map.addControl(\r\n      new mapboxgl.AttributionControl({\r\n        compact: true,\r\n      })\r\n    );\r\n\r\n    map.on('load', () => {\r\n      map.addSource('hexagons', {\r\n        type: 'geojson',\r\n        data:\r\n          'https://raw.githubusercontent.com/Aete/transport-accessibility/master/src/data/hexagon_res_10_400m_count/hexagon_with_data.geojson',\r\n      });\r\n\r\n      map.addLayer({\r\n        id: 'hexagons',\r\n        type: 'fill',\r\n        source: 'hexagons',\r\n        layout: {},\r\n        paint: {\r\n          'fill-color': [\r\n            'interpolate',\r\n            ['linear'],\r\n            ['get', 'total_score'],\r\n            ...colors,\r\n          ],\r\n          'fill-opacity': 0.7,\r\n        },\r\n      });\r\n      setMap(map);\r\n    });\r\n\r\n    map.on('click', 'hexagons', function (e) {\r\n      const {\r\n        x,\r\n        y,\r\n        score_bus,\r\n        score_subway,\r\n        score_bike,\r\n        total_score,\r\n      } = e.features[0].properties;\r\n\r\n      d3.select('.spiderChart').remove();\r\n\r\n      const text = textGenerate(\r\n        total_score,\r\n        score_bus,\r\n        score_subway,\r\n        score_bike\r\n      );\r\n\r\n      const marker = new mapboxgl.Popup()\r\n        .setLngLat([x, y])\r\n        .setHTML(`${text} <div class=\"spiderChart\"></div>`)\r\n        .addTo(map);\r\n\r\n      Spider(d3.select('.spiderChart'), {\r\n        score_bus,\r\n        score_subway,\r\n        score_bike,\r\n      });\r\n    });\r\n\r\n    return () => map.remove();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      <div className=\"map-container\" ref={mapContainerRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n\r\nconst textGenerate = (total_score, score_bus, score_subway, score_bike) => {\r\n  return `\r\n    <section class='textInfo'>\r\n    <h1>Accessibility score</h1>\r\n    <ul>\r\n      <li>total score: ${Math.round(total_score * 100) / 100} / 15</li>\r\n      <li>subway: ${Math.round(score_subway * 100) / 100} / 5</li>\r\n      <li>bus: ${Math.round(score_bus * 100) / 100} / 5</li>\r\n      <li>bike: ${Math.round(score_bike * 100) / 100} / 5</li>\r\n      <li><a>Methodolgy (click)</a></li>\r\n    </ul>\r\n    </section>\r\n  `;\r\n};\r\n","import * as d3 from 'd3';\r\nexport default function Spider(\r\n  element,\r\n  { score_bus, score_bike, score_subway }\r\n) {\r\n  const margin = {\r\n    top: 25,\r\n    left: 25,\r\n    right: 25,\r\n    bottom: 25,\r\n  };\r\n\r\n  const width = 240;\r\n  const height = 240;\r\n  const viewbox = [\r\n    0,\r\n    0,\r\n    width + margin.left + margin.right,\r\n    height + margin.top + margin.bottom,\r\n  ];\r\n  const svg = element\r\n    .append('svg')\r\n    .attr('viewBox', viewbox)\r\n    .attr('preserveAspectRatio', 'xMinYMid meet');\r\n\r\n  const newFontSize = 12 * (290 / parseInt(d3.select('svg').style('width')));\r\n\r\n  const container = svg\r\n    .append('g')\r\n    .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n  const rScale = d3\r\n    .scaleLinear()\r\n    .domain([0, 5])\r\n    .range([0, width / 2]);\r\n\r\n  const score = [0, 1, 2, 3, 4, 5];\r\n\r\n  const axisSub = container\r\n    .selectAll('.axis-sub')\r\n    .data(score)\r\n    .enter()\r\n    .append('circle')\r\n    .attr('class', 'axis-sub')\r\n    .attr('cx', width / 2)\r\n    .attr('cy', height / 2)\r\n    .attr('fill', 'none')\r\n    .attr('stroke', '#424242')\r\n    .attr('r', (d) => rScale(d));\r\n\r\n  const label = container\r\n    .selectAll('.label')\r\n    .data(score.slice(1))\r\n    .enter()\r\n    .append('text')\r\n    .text((d) => d)\r\n    .attr('text-anchor', 'middle')\r\n    .attr('y', (d) => rScale(d) + rScale(5) + 15)\r\n    .attr('x', width / 2)\r\n    .style('font-size', '10px')\r\n    .attr('fill', (d) => '#636363');\r\n\r\n  const polygon = container\r\n    .append('g')\r\n    .attr('transform', `translate(${width / 2},${height / 2})`);\r\n\r\n  polygon\r\n    .append('circle')\r\n    .attr('cx', 0)\r\n    .attr('cy', 0)\r\n    .attr('fill', '#636363')\r\n    .attr('r', 1);\r\n\r\n  const axisMain = polygon\r\n    .selectAll('.axis-main')\r\n    .data([1, 5, 9])\r\n    .enter()\r\n    .append('line')\r\n    .attr('class', 'axis-main')\r\n    .attr('x1', 0)\r\n    .attr('y1', 0)\r\n    .attr('x2', (d) => Math.cos((Math.PI * d) / 6) * rScale(5))\r\n    .attr('y2', (d) => Math.sin((Math.PI * d) / 6) * rScale(5))\r\n    .attr('stroke', '#636363');\r\n\r\n  const busCoord = `${Math.cos(Math.PI / 6) * rScale(+score_bus)}, ${\r\n    Math.sin(Math.PI / 6) * rScale(+score_bus)\r\n  }`;\r\n  const subwayCoord = `0,${-rScale(+score_subway)}`;\r\n  const bikeCoord = `${Math.cos((5 * Math.PI) / 6) * rScale(+score_bike)}, ${\r\n    Math.sin((5 * Math.PI) / 6) * rScale(+score_bike)\r\n  }`;\r\n\r\n  polygon\r\n    .append('polygon')\r\n    .attr('fill', '#2196F3')\r\n    .attr('fill-opacity', 0.3)\r\n    .attr('stroke', '#2963FF')\r\n    .attr('stroke-width', 2)\r\n    .attr('points', '0,0 0,0 0,0')\r\n    .transition()\r\n    .duration(300)\r\n    .attr('points', `${busCoord} ${subwayCoord} ${bikeCoord}`);\r\n\r\n  polygon\r\n    .selectAll('.point')\r\n    .data([score_bus, score_bike, score_subway])\r\n    .enter()\r\n    .append('circle')\r\n    .attr('class', 'point')\r\n    .attr('cx', (d, i) => Math.cos((Math.PI * (i * 4 + 1)) / 6) * rScale(d))\r\n    .attr('cy', (d, i) => Math.sin((Math.PI * (i * 4 + 1)) / 6) * rScale(d))\r\n    .attr('r', '3')\r\n    .attr('fill', '#2196F3');\r\n\r\n  polygon\r\n    .append('text')\r\n    .text('bus')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('x', Math.cos(Math.PI / 6) * rScale(6))\r\n    .attr('y', Math.sin(Math.PI / 6) * rScale(6))\r\n    .attr('fill', '#FFFFFF')\r\n    .style('font-size', `${newFontSize}px`);\r\n\r\n  polygon\r\n    .append('text')\r\n    .text('bike')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('x', Math.cos((Math.PI * 5) / 6) * rScale(6))\r\n    .attr('y', Math.sin((Math.PI * 5) / 6) * rScale(6))\r\n    .attr('fill', '#FFFFFF')\r\n    .style('font-size', `${newFontSize}px`);\r\n\r\n  polygon\r\n    .append('text')\r\n    .text('subway')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('x', Math.cos((Math.PI * 9) / 6) * rScale(6))\r\n    .attr('y', Math.sin((Math.PI * 9) / 6) * rScale(6) + 12)\r\n    .attr('fill', '#FFFFFF')\r\n    .style('font-size', `${newFontSize}px`);\r\n}\r\n","import Map from './Map';\n\nimport '../css/App.css';\n\nfunction App() {\n  return (\n    <main className=\"dashboard\">\n      <Map />\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}