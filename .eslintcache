[{"C:\\Users\\hsg82\\Documents\\GitHub\\transport-accessibility\\src\\index.js":"1","C:\\Users\\hsg82\\Documents\\GitHub\\transport-accessibility\\src\\reportWebVitals.js":"2","C:\\Users\\hsg82\\Documents\\GitHub\\transport-accessibility\\src\\Components\\App.js":"3","C:\\Users\\hsg82\\Documents\\GitHub\\transport-accessibility\\src\\Components\\Map.js":"4","C:\\Users\\hsg82\\Documents\\GitHub\\transport-accessibility\\src\\D3Chart\\Spider.js":"5","C:\\Users\\hsg82\\Documents\\GitHub\\transport-accessibility\\src\\Components\\Modal.js":"6","C:\\Users\\hsg82\\Documents\\GitHub\\transport-accessibility\\src\\Components\\Chart.js":"7"},{"size":511,"mtime":1608776613076,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":434,"mtime":1612181400071,"results":"11","hashOfConfig":"9"},{"size":3874,"mtime":1613434254841,"results":"12","hashOfConfig":"9"},{"size":3819,"mtime":1613397461886,"results":"13","hashOfConfig":"9"},{"size":1533,"mtime":1612182217598,"results":"14","hashOfConfig":"9"},{"size":708,"mtime":1613398361330,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ep1k07",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\Users\\hsg82\\Documents\\GitHub\\transport-accessibility\\src\\index.js",[],["33","34"],"C:\\Users\\hsg82\\Documents\\GitHub\\transport-accessibility\\src\\reportWebVitals.js",[],"C:\\Users\\hsg82\\Documents\\GitHub\\transport-accessibility\\src\\Components\\App.js",[],"C:\\Users\\hsg82\\Documents\\GitHub\\transport-accessibility\\src\\Components\\Map.js",["35","36"],"C:\\Users\\hsg82\\Documents\\GitHub\\transport-accessibility\\src\\D3Chart\\Spider.js",["37","38","39"],"import * as d3 from 'd3';\r\nexport default function Spider(\r\n  element,\r\n  { score_bus, score_bike, score_subway }\r\n) {\r\n  const margin = {\r\n    top: 25,\r\n    left: 25,\r\n    right: 25,\r\n    bottom: 25,\r\n  };\r\n\r\n  const width = 240;\r\n  const height = 240;\r\n  const viewbox = [\r\n    0,\r\n    0,\r\n    width + margin.left + margin.right,\r\n    height + margin.top + margin.bottom,\r\n  ];\r\n\r\n  const svg = element\r\n    .append('svg')\r\n    .attr('viewBox', viewbox)\r\n    .attr('preserveAspectRatio', 'xMinYMid meet');\r\n\r\n  const newFontSize = 12;\r\n\r\n  const container = svg\r\n    .append('g')\r\n    .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n  const rScale = d3\r\n    .scaleLinear()\r\n    .domain([0, 5])\r\n    .range([0, width / 2]);\r\n\r\n  const score = [0, 1, 2, 3, 4, 5];\r\n\r\n  const axisSub = container\r\n    .selectAll('.axis-sub')\r\n    .data(score)\r\n    .enter()\r\n    .append('circle')\r\n    .attr('class', 'axis-sub')\r\n    .attr('cx', width / 2)\r\n    .attr('cy', height / 2)\r\n    .attr('fill', 'none')\r\n    .attr('stroke', '#424242')\r\n    .attr('r', (d) => rScale(d));\r\n\r\n  const label = container\r\n    .selectAll('.label')\r\n    .data(score.slice(1))\r\n    .enter()\r\n    .append('text')\r\n    .text((d) => d)\r\n    .attr('text-anchor', 'middle')\r\n    .attr('y', (d) => rScale(d) + rScale(5) + 15)\r\n    .attr('x', width / 2)\r\n    .style('font-size', '10px')\r\n    .attr('fill', (d) => '#636363');\r\n\r\n  const polygon = container\r\n    .append('g')\r\n    .attr('transform', `translate(${width / 2},${height / 2})`);\r\n\r\n  polygon\r\n    .append('circle')\r\n    .attr('cx', 0)\r\n    .attr('cy', 0)\r\n    .attr('fill', '#636363')\r\n    .attr('r', 1);\r\n\r\n  const axisMain = polygon\r\n    .selectAll('.axis-main')\r\n    .data([1, 5, 9])\r\n    .enter()\r\n    .append('line')\r\n    .attr('class', 'axis-main')\r\n    .attr('x1', 0)\r\n    .attr('y1', 0)\r\n    .attr('x2', (d) => Math.cos((Math.PI * d) / 6) * rScale(5))\r\n    .attr('y2', (d) => Math.sin((Math.PI * d) / 6) * rScale(5))\r\n    .attr('stroke', '#636363');\r\n\r\n  const busCoord = `${Math.cos(Math.PI / 6) * rScale(+score_bus)}, ${\r\n    Math.sin(Math.PI / 6) * rScale(+score_bus)\r\n  }`;\r\n  const subwayCoord = `0,${-rScale(+score_subway)}`;\r\n  const bikeCoord = `${Math.cos((5 * Math.PI) / 6) * rScale(+score_bike)}, ${\r\n    Math.sin((5 * Math.PI) / 6) * rScale(+score_bike)\r\n  }`;\r\n\r\n  polygon\r\n    .append('polygon')\r\n    .attr('fill', '#2196F3')\r\n    .attr('fill-opacity', 0.3)\r\n    .attr('stroke', '#2963FF')\r\n    .attr('stroke-width', 2)\r\n    .attr('points', '0,0 0,0 0,0')\r\n    .transition()\r\n    .duration(300)\r\n    .attr('points', `${busCoord} ${subwayCoord} ${bikeCoord}`);\r\n\r\n  polygon\r\n    .selectAll('.point')\r\n    .data([score_bus, score_bike, score_subway])\r\n    .enter()\r\n    .append('circle')\r\n    .attr('class', 'point')\r\n    .attr('cx', (d, i) => Math.cos((Math.PI * (i * 4 + 1)) / 6) * rScale(d))\r\n    .attr('cy', (d, i) => Math.sin((Math.PI * (i * 4 + 1)) / 6) * rScale(d))\r\n    .attr('r', '3')\r\n    .attr('fill', '#2196F3');\r\n\r\n  polygon\r\n    .append('text')\r\n    .text('bus')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('x', Math.cos(Math.PI / 6) * rScale(6))\r\n    .attr('y', Math.sin(Math.PI / 6) * rScale(6))\r\n    .attr('fill', '#FFFFFF')\r\n    .style('font-size', `${newFontSize}px`);\r\n\r\n  polygon\r\n    .append('text')\r\n    .text('bike')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('x', Math.cos((Math.PI * 5) / 6) * rScale(6))\r\n    .attr('y', Math.sin((Math.PI * 5) / 6) * rScale(6))\r\n    .attr('fill', '#FFFFFF')\r\n    .style('font-size', `${newFontSize}px`);\r\n\r\n  polygon\r\n    .append('text')\r\n    .text('subway')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('x', Math.cos((Math.PI * 9) / 6) * rScale(6))\r\n    .attr('y', Math.sin((Math.PI * 9) / 6) * rScale(6) + 12)\r\n    .attr('fill', '#FFFFFF')\r\n    .style('font-size', `${newFontSize}px`);\r\n}\r\n","C:\\Users\\hsg82\\Documents\\GitHub\\transport-accessibility\\src\\Components\\Modal.js",[],"C:\\Users\\hsg82\\Documents\\GitHub\\transport-accessibility\\src\\Components\\Chart.js",["40"],"import { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nimport Spider from '../D3Chart/Spider';\r\nimport '../css/chart.css';\r\n\r\nexport default function Chart({ scores }) {\r\n  console.log('!');\r\n  const { score_bus, score_bike, score_subway } = scores;\r\n  const [chart, setChart] = useState(null);\r\n  const container = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!chart) {\r\n      setChart(\r\n        new Spider(d3.select(container.current), {\r\n          score_bus,\r\n          score_bike,\r\n          score_subway,\r\n        })\r\n      );\r\n    }\r\n    return setChart(null);\r\n  }, [chart]);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      <div ref={container}></div>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":8,"column":8,"nodeType":"47","messageId":"48","endLine":8,"endColumn":14},{"ruleId":"45","severity":1,"message":"49","line":101,"column":13,"nodeType":"47","messageId":"48","endLine":101,"endColumn":19},{"ruleId":"45","severity":1,"message":"50","line":40,"column":9,"nodeType":"47","messageId":"48","endLine":40,"endColumn":16},{"ruleId":"45","severity":1,"message":"51","line":52,"column":9,"nodeType":"47","messageId":"48","endLine":52,"endColumn":14},{"ruleId":"45","severity":1,"message":"52","line":75,"column":9,"nodeType":"47","messageId":"48","endLine":75,"endColumn":17},{"ruleId":"53","severity":1,"message":"54","line":24,"column":6,"nodeType":"55","endLine":24,"endColumn":13,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Spider' is defined but never used.","Identifier","unusedVar","'marker' is assigned a value but never used.","'axisSub' is assigned a value but never used.","'label' is assigned a value but never used.","'axisMain' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'score_bike', 'score_bus', and 'score_subway'. Either include them or remove the dependency array.","ArrayExpression",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [chart, score_bike, score_bus, score_subway]",{"range":"62","text":"63"},[598,605],"[chart, score_bike, score_bus, score_subway]"]